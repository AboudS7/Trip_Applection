// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trip_Applection.Models;

#nullable disable

namespace Trip_Applection.Migrations
{
    [DbContext(typeof(TravelsContext))]
    [Migration("20240718204153_EmptyMG")]
    partial class EmptyMG
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Trip_Applection.Models.Catogery", b =>
                {
                    b.Property<int>("CatogryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("catogry_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatogryId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("CatogryId")
                        .HasName("PK__Catogery__19BD3E1984A2C092");

                    b.ToTable("Catogery");
                });

            modelBuilder.Entity("Trip_Applection.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("CityId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Trip_Applection.Models.Contry", b =>
                {
                    b.Property<int>("ContryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("contry_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContryId"), 1L, 1);

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("ContryId");

                    b.HasIndex("CityId");

                    b.ToTable("Contry");
                });

            modelBuilder.Entity("Trip_Applection.Models.Imag", b =>
                {
                    b.Property<int>("ImagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("imag_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImagId"), 1L, 1);

                    b.Property<string>("ImagName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Imag_name");

                    b.Property<int?>("TripId")
                        .HasColumnType("int")
                        .HasColumnName("trip_id");

                    b.HasKey("ImagId");

                    b.HasIndex("TripId");

                    b.ToTable("Imag");
                });

            modelBuilder.Entity("Trip_Applection.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("trip_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"), 1L, 1);

                    b.Property<int?>("CatogryId")
                        .HasColumnType("int")
                        .HasColumnName("catogry_id");

                    b.Property<int?>("ContryId")
                        .HasColumnType("int")
                        .HasColumnName("contry_id");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("description_");

                    b.Property<int?>("ImagId")
                        .HasColumnType("int")
                        .HasColumnName("imag_id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.HasKey("TripId");

                    b.HasIndex("CatogryId");

                    b.HasIndex("ContryId");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("Trip_Applection.Models.Contry", b =>
                {
                    b.HasOne("Trip_Applection.Models.City", "City")
                        .WithMany("Contries")
                        .HasForeignKey("CityId")
                        .HasConstraintName("City_Id");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Trip_Applection.Models.Imag", b =>
                {
                    b.HasOne("Trip_Applection.Models.Trip", "Trip")
                        .WithMany("Imags")
                        .HasForeignKey("TripId")
                        .HasConstraintName("Trip_Id");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Trip_Applection.Models.Trip", b =>
                {
                    b.HasOne("Trip_Applection.Models.Catogery", "Catogry")
                        .WithMany("Trips")
                        .HasForeignKey("CatogryId")
                        .HasConstraintName("Catogry_id");

                    b.HasOne("Trip_Applection.Models.Contry", "Contry")
                        .WithMany("Trips")
                        .HasForeignKey("ContryId")
                        .HasConstraintName("Contry_Id");

                    b.Navigation("Catogry");

                    b.Navigation("Contry");
                });

            modelBuilder.Entity("Trip_Applection.Models.Catogery", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Trip_Applection.Models.City", b =>
                {
                    b.Navigation("Contries");
                });

            modelBuilder.Entity("Trip_Applection.Models.Contry", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Trip_Applection.Models.Trip", b =>
                {
                    b.Navigation("Imags");
                });
#pragma warning restore 612, 618
        }
    }
}
